


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* SAM7.S: Startup file for Atmel AT91SAM7 device serie
                       s                     */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2008 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         ;/* for (jtag) debug session, use your customized ...ini
                        for custom settings  */
   13 00000000         ;/******************************************************
                       ***********************/ 
   14 00000000         ;/* 2008-11-19 hs: memory mapping for flash and ram now 
                       configurable
   15 00000000         ;/* 2013-02-07 hs: added tooltips for watchdog configura
                       tion
   16 00000000         ;/* 2013-06-27 hs: added configuration wizard control fo
                       r system exclusive mode
   17 00000000         ;/* 2013-06-27 hs: added configureable system and watchd
                       og exclusive mode
   18 00000000         ;/* 2013-07-04 hs: added important notes to memory mappi
                       ng and ivt to ram copy
   19 00000000         ;/* 2013-07-11 hs: added verification of ivt ram copy an
                       d error signaling led
   20 00000000         ;/******************************************************
                       ***********************/
   21 00000000         
   22 00000000         ;/*
   23 00000000         ; *  The SAM7.S code is executed after CPU Reset. This f
                       ile may be 
   24 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   25 00000000         ; *  symbols are entered under Options - ASM - Define.
   26 00000000         ; *
   27 00000000         ; *  REMAP: when set the startup code remaps exception v
                       ectors from
   28 00000000         ; *  on-chip RAM to address 0.
   29 00000000         ; *
   30 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   31 00000000         ; *  from on-chip Flash to on-chip RAM.
   32 00000000         ; */
   33 00000000         
   34 00000000         
   35 00000000         ; Standard definitions of Mode bits and Interrupt (I & F



ARM Macro Assembler    Page 2 


                       ) flags in PSRs
   36 00000000         
   37 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   38 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   39 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   40 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   41 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   42 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   43 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   44 00000000         
   45 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   46 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   47 00000000         
   48 00000000         
   49 00000000         ;// <e> System exclusive Mode {exclusive/first startup}
   50 00000000         ; System exclusive Mode Setting
   51 00000000         ;// <i> Enable for bootloader or single application only
                        (DISABLE for Application called by a Bootloader)
   52 00000000         ;//   <o1.0> Watchdog Timer (WDT) assigned to exclusive 
                       Mode
   53 00000000         ;//   <i> Enable to assign Watchdog Timer to exclusive/f
                       irst Mode (DISABLE to assign Watchdog Timer to Applicati
                       on called by a Bootloader)
   54 00000000         ;// </e>
   55 00000000 00000001 
                       SYS_EXCLUSIVE
                               EQU              1
   56 00000000 00000001 
                       WDT_EXCLUSIVE
                               EQU              1
   57 00000000         
   58 00000000         
   59 00000000         ;// <e> Error signaling for stopped Startup on System Ma
                       lfunction
   60 00000000         ; Error Signaling for stopped (DAbt_Handler call) Startu
                       p on System Malfunction thru custom port
   61 00000000         ;//   <i> Error Signaling of stopped (DAbt_Handler call)
                        Startup on System Malfunction thru custom port
   62 00000000         ;//   <o1> PIO Port Base Select <0xFFFFF400-0xFFFFF600:0
                       x200>
   63 00000000         ;//   <i> PIO Port Base Select (0xFFFFF400= PIOA, 0xFFFF



ARM Macro Assembler    Page 3 


                       F600= PIOB)
   64 00000000         ;//   <o3.2> PIO Mask low active Level
   65 00000000         ;//   <i> PIO Mask low active Level (o= high active, x= 
                       low active)
   66 00000000         ;//   <o2> PIO Mask (Pins) <0x1-0xFFFFFFFF:1>
   67 00000000         ;//   <i> PIO Mask of Pin(s) to control
   68 00000000         ;// </e>
   69 00000000 00000001 
                       ERR_SIGNALING
                               EQU              1
   70 00000000 FFFFF400 
                       PIO_BASE
                               EQU              0xFFFFF400  ; PIO Base Address 
                                                            for LED(s)
   71 00000000 00000004 
                       PIO_MASK
                               EQU              0x00000004  ; PIO Mask  (Pins) 
                                                            for LED(s)
   72 00000000 00000034 
                       PIO_XODR
                               EQU              0x34        ; PIO_XODR Offset (
                                                            active low: 0x34 to
                                                             Clear Output= CODR
                                                            , active high: 0x30
                                                             to Set Output= SOD
                                                            R)
   73 00000000         
   74 00000000         
   75 00000000         ;// <h> Memory Mapping
   76 00000000         ; Internal Memory Base Addresses
   77 00000000         ;// <o> Flash base address {check _FLASH_BASE define}
   78 00000000         ;// <i> Default 0x00100000 (value is overriden by a glob
                       al defined _FLASH_BASE= 0x... in target options, c/c++, 
                       define)
   79 00000000         ;// <i> Move up this (AND target options IROM start) to 
                       higher location for non-exclusive applications (also dec
                       rease target options IROM size in such cases)
   80 00000000                 IF               :DEF:_FLASH_BASE
   83 00000000 00100000 
                       FLASH_BASE
                               EQU              0x00100000
   84 00000000                 ENDIF
   85 00000000         ;// <o> Ram base address {check _RAM_BASE define}
   86 00000000         ;// <i> Default 0x00200000 (value is overriden by a glob
                       al defined _RAM_BASE= 0x... in target options, c/c++, de
                       fine)
   87 00000000         ;// <i> CAUTION, when Interrupt Vector Table (IVT) is pl
                       aced (via asm define RAM_INTVEC) in (to required address
                        0x00000000) mirrored (via asm define REMAP) RAM:
   88 00000000         ;// <i> - keep this setting at default start address
   89 00000000         ;// <i> - but move up target options IRAM start by +0x40
                        (64 bytes) and decrease IRAM size by -0x40 (64 bytes) t
                       o reserve space for IVT at start of RAM
   90 00000000                 IF               :DEF:_RAM_BASE
   93 00000000 00200000 
                       RAM_BASE
                               EQU              0x00200000
   94 00000000                 ENDIF
   95 00000000         ;// </h>



ARM Macro Assembler    Page 4 


   96 00000000         
   97 00000000         
   98 00000000         ;// <h> Stack Configuration {Stack Sizes in Bytes}
   99 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
  100 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
  101 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
  102 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
  103 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
  104 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
  105 00000000         ;// </h>
  106 00000000         
  107 00000000 00000080 
                       UND_Stack_Size
                               EQU              0x00000080
  108 00000000 00000100 
                       SVC_Stack_Size
                               EQU              0x00000100
  109 00000000 00000080 
                       ABT_Stack_Size
                               EQU              0x00000080
  110 00000000 00000080 
                       FIQ_Stack_Size
                               EQU              0x00000080
  111 00000000 00000200 
                       IRQ_Stack_Size
                               EQU              0x00000200
  112 00000000 00000200 
                       USR_Stack_Size
                               EQU              0x00000200
  113 00000000         
  115 00000000 00000480 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
  116 00000000         
  117 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
  118 00000000         
  119 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
  120 00000200         __initial_sp
                               SPACE            ISR_Stack_Size
  121 00000680         
  122 00000680         Stack_Top
  123 00000680         
  124 00000680         
  125 00000680         ;// <h> Heap Configuration
  126 00000680         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
  127 00000680         ;// </h>
  128 00000680         
  129 00000680 000001F4 
                       Heap_Size
                               EQU              0x000001F4
  130 00000680         
  131 00000680                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
  132 00000000         __heap_base
  133 00000000         Heap_Mem



ARM Macro Assembler    Page 5 


                               SPACE            Heap_Size
  134 000001F4         __heap_limit
  135 000001F4         
  136 000001F4         
  137 000001F4         ; Reset Controller (RSTC) definitions
  138 000001F4 FFFFFD00 
                       RSTC_BASE
                               EQU              0xFFFFFD00  ; RSTC Base Address
                                                            
  139 000001F4 00000008 
                       RSTC_MR EQU              0x08        ; RSTC_MR Offset
  140 000001F4         
  141 000001F4         ;/*
  142 000001F4         ;// <e> Reset Controller (RSTC)
  143 000001F4         ;//   <o1.0>     URSTEN: User Reset Enable
  144 000001F4         ;//              <i> Enables NRST Pin to generate Reset
  145 000001F4         ;//   <o1.8..11> ERSTL: External Reset Length <0-15>
  146 000001F4         ;//              <i> External Reset Time in 2^(ERSTL+1) 
                       Slow Clock Cycles
  147 000001F4         ;// </e>
  148 000001F4         ;*/
  149 000001F4 00000001 
                       RSTC_SETUP
                               EQU              1
  150 000001F4 A5000401 
                       RSTC_MR_Val
                               EQU              0xA5000401
  151 000001F4         
  152 000001F4         
  153 000001F4         ; Embedded Flash Controller (EFC) definitions
  154 000001F4 FFFFFF00 
                       EFC_BASE
                               EQU              0xFFFFFF00  ; EFC Base Address
  155 000001F4 00000060 
                       EFC0_FMR
                               EQU              0x60        ; EFC0_FMR Offset
  156 000001F4 00000070 
                       EFC1_FMR
                               EQU              0x70        ; EFC1_FMR Offset
  157 000001F4         
  158 000001F4         ;// <e> Embedded Flash Controller 0 (EFC0)
  159 000001F4         ;//   <o1.16..23> FMCN: Flash Microsecond Cycle Number <
                       0-255>
  160 000001F4         ;//               <i> Number of rounded-up Master Clock 
                       Cycles in 1us for GPNVM Access [(MCK/ 1000000)* 1,05) or
                        (MCK/ 1000000)+ 2]
  161 000001F4         ;//   <o1.8..9>   FWS: Flash Wait State
  162 000001F4         ;//               <0=> Read: 1 cycle / Write: 2 cycles
  163 000001F4         ;//               <1=> Read: 2 cycle / Write: 3 cycles
  164 000001F4         ;//               <2=> Read: 3 cycle / Write: 4 cycles
  165 000001F4         ;//               <3=> Read: 4 cycle / Write: 4 cycles
  166 000001F4         ;// </e>
  167 000001F4 00000001 
                       EFC0_SETUP
                               EQU              1
  168 000001F4 00320100 
                       EFC0_FMR_Val
                               EQU              0x00320100
  169 000001F4         



ARM Macro Assembler    Page 6 


  170 000001F4         ;// <e> Embedded Flash Controller 1 (EFC1)
  171 000001F4         ;//   <o1.16..23> FMCN: Flash Microsecond Cycle Number <
                       0-255>
  172 000001F4         ;//               <i> Number of rounded-up Master Clock 
                       Cycles in 1us for GPNVM Access [(MCK/ 1000000)* 1,05) or
                        (MCK/ 1000000)+ 2]
  173 000001F4         ;//   <o1.8..9>   FWS: Flash Wait State
  174 000001F4         ;//               <0=> Read: 1 cycle / Write: 2 cycles
  175 000001F4         ;//               <1=> Read: 2 cycle / Write: 3 cycles
  176 000001F4         ;//               <2=> Read: 3 cycle / Write: 4 cycles
  177 000001F4         ;//               <3=> Read: 4 cycle / Write: 4 cycles
  178 000001F4         ;// </e>
  179 000001F4 00000001 
                       EFC1_SETUP
                               EQU              1
  180 000001F4 00320100 
                       EFC1_FMR_Val
                               EQU              0x00320100
  181 000001F4         
  182 000001F4         
  183 000001F4         ; Watchdog Timer (WDT) definitions
  184 000001F4 FFFFFD40 
                       WDT_BASE
                               EQU              0xFFFFFD40  ; WDT Base Address
  185 000001F4 00000004 
                       WDT_MR  EQU              0x04        ; WDT_MR Offset
  186 000001F4         
  187 000001F4         ;// <e> Watchdog Timer (WDT) {check exclusive Mode Tree}
                       
  188 000001F4         ;//   <i> Refer to AT91SAM7X manual chapter 16 page 85
  189 000001F4         ;//   <o1.0..11>  WDV: Watchdog Counter Value <0-4095>
  190 000001F4         ;//   <i> The maximum delay (ABSOLUTE value) for the con
                       firmation before reset / IRQ (1s is about 256 counter-do
                       wn ticks)
  191 000001F4         ;//   <o1.16..27> WDD: Watchdog Delta (DELAY) Value <0-4
                       095>
  192 000001F4         ;//   <i> The delay (ABSOLUTE value) after reload of WDV
                        to avoid unintended and too fast confirmation (any conf
                       irmation before this raise a reset / IRQ, 1s is about 25
                       6 counter-down ticks)
  193 000001F4         ;//   <o1.12>     WDFIEN: Watchdog Fault Interrupt Enabl
                       e
  194 000001F4         ;//   <o1.13>     WDRSTEN: Watchdog Reset Enable
  195 000001F4         ;//   <o1.14>     WDRPROC: Watchdog Reset Processor
  196 000001F4         ;//   <i> Uncheck (clear) to activate all resets, check 
                       (set) to activate processor reset only (refer to AT91SAM
                       7X manual 16.4.2 page 89)
  197 000001F4         ;//   <o1.28>     WDDBGHLT: Watchdog Debug Halt
  198 000001F4         ;//   <o1.29>     WDIDLEHLT: Watchdog Idle Halt
  199 000001F4         ;//   <o1.15>     WDDIS: Watchdog Disable
  200 000001F4         ;// </e>
  201 000001F4 00000001 
                       WDT_SETUP
                               EQU              1
  202 000001F4 00008000 
                       WDT_MR_Val
                               EQU              0x00008000
  203 000001F4         
  204 000001F4         



ARM Macro Assembler    Page 7 


  205 000001F4         ; Power Mangement Controller (PMC) definitions
  206 000001F4 FFFFFC00 
                       PMC_BASE
                               EQU              0xFFFFFC00  ; PMC Base Address
  207 000001F4 00000020 
                       PMC_MOR EQU              0x20        ; PMC_MOR Offset
  208 000001F4 00000024 
                       PMC_MCFR
                               EQU              0x24        ; PMC_MCFR Offset
  209 000001F4 0000002C 
                       PMC_PLLR
                               EQU              0x2C        ; PMC_PLLR Offset
  210 000001F4 00000030 
                       PMC_MCKR
                               EQU              0x30        ; PMC_MCKR Offset
  211 000001F4 00000068 
                       PMC_SR  EQU              0x68        ; PMC_SR Offset
  212 000001F4 00000001 
                       PMC_MOSCEN
                               EQU              (1<<0)      ; Main Oscillator E
                                                            nable
  213 000001F4 00000002 
                       PMC_OSCBYPASS
                               EQU              (1<<1)      ; Main Oscillator B
                                                            ypass
  214 000001F4 0000FF00 
                       PMC_OSCOUNT
                               EQU              (0xFF<<8)   ; Main OScillator S
                                                            tart-up Time
  215 000001F4 000000FF 
                       PMC_DIV EQU              (0xFF<<0)   ; PLL Divider
  216 000001F4 00003F00 
                       PMC_PLLCOUNT
                               EQU              (0x3F<<8)   ; PLL Lock Counter
  217 000001F4 0000C000 
                       PMC_OUT EQU              (0x03<<14)  ; PLL Clock Frequen
                                                            cy Range
  218 000001F4 07FF0000 
                       PMC_MUL EQU              (0x7FF<<16) ; PLL Multiplier
  219 000001F4 30000000 
                       PMC_USBDIV
                               EQU              (0x03<<28)  ; USB Clock Divider
                                                            
  220 000001F4 00000003 
                       PMC_CSS EQU              (3<<0)      ; Clock Source Sele
                                                            ction
  221 000001F4 0000001C 
                       PMC_PRES
                               EQU              (7<<2)      ; Prescaler Selecti
                                                            on
  222 000001F4 00000001 
                       PMC_MOSCS
                               EQU              (1<<0)      ; Main Oscillator S
                                                            table
  223 000001F4 00000004 
                       PMC_LOCK
                               EQU              (1<<2)      ; PLL Lock Status
  224 000001F4 00000008 
                       PMC_MCKRDY



ARM Macro Assembler    Page 8 


                               EQU              (1<<3)      ; Master Clock Stat
                                                            us
  225 000001F4         
  226 000001F4         ;// <e> Power Mangement Controller (PMC) {exclusive Mode
                        only}
  227 000001F4         ;//   <h> Main Oscillator
  228 000001F4         ;//     <o1.0>      MOSCEN: Main Oscillator Enable
  229 000001F4         ;//     <o1.1>      OSCBYPASS: Oscillator Bypass
  230 000001F4         ;//     <o1.8..15>  OSCCOUNT: Main Oscillator Startup Ti
                       me <0-255>
  231 000001F4         ;//   </h>
  232 000001F4         ;//   <h> Phase Locked Loop (PLL)
  233 000001F4         ;//     <o2.0..7>   DIV: PLL Divider <0-255>
  234 000001F4         ;//     <o2.16..26> MUL: PLL Multiplier <0-2047>
  235 000001F4         ;//                 <i> PLL Output is multiplied by MUL+
                       1
  236 000001F4         ;//     <o2.14..15> OUT: PLL Clock Frequency Range
  237 000001F4         ;//                 <0=> 80..160MHz  <1=> Reserved
  238 000001F4         ;//                 <2=> 150..220MHz <3=> Reserved
  239 000001F4         ;//     <o2.8..13>  PLLCOUNT: PLL Lock Counter <0-63>
  240 000001F4         ;//     <o2.28..29> USBDIV: USB Clock Divider
  241 000001F4         ;//                 <0=> None  <1=> 2  <2=> 4  <3=> Rese
                       rved
  242 000001F4         ;//   </h>
  243 000001F4         ;//   <o3.0..1>   CSS: Clock Source Selection
  244 000001F4         ;//               <0=> Slow Clock
  245 000001F4         ;//               <1=> Main Clock
  246 000001F4         ;//               <2=> Reserved
  247 000001F4         ;//               <3=> PLL Clock
  248 000001F4         ;//   <o3.2..4>   PRES: Prescaler
  249 000001F4         ;//               <0=> None
  250 000001F4         ;//               <1=> Clock / 2    <2=> Clock / 4
  251 000001F4         ;//               <3=> Clock / 8    <4=> Clock / 16
  252 000001F4         ;//               <5=> Clock / 32   <6=> Clock / 64
  253 000001F4         ;//               <7=> Reserved
  254 000001F4         ;// </e>
  255 000001F4 00000001 
                       PMC_SETUP
                               EQU              1
  256 000001F4 00000601 
                       PMC_MOR_Val
                               EQU              0x00000601  ; AT91C_CKGR_MOR (=
                                                            =AT91C_PMC_MOR): 0x
                                                            06 = six slow clock
                                                             cycles, 01y = enab
                                                            le main oscillator 
                                                            
  257 000001F4 00191C05 
                       PMC_PLLR_Val
                               EQU              0x00191C05
  258 000001F4 00000007 
                       PMC_MCKR_Val
                               EQU              0x00000007
  259 000001F4         
  260 000001F4         
  261 000001F4                 PRESERVE8
  262 000001F4         
  263 000001F4         
  264 000001F4         ; Area Definition and Entry Point



ARM Macro Assembler    Page 9 


  265 000001F4         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  266 000001F4         
  267 000001F4                 AREA             RESET, CODE, READONLY
  268 00000000                 ARM
  269 00000000         
  270 00000000         
  271 00000000         ; Exception Vectors
  272 00000000         ;  Mapped to Address 0.
  273 00000000         ;  Absolute addressing mode must be used.
  274 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  275 00000000         
  276 00000000 E59FF018 
                       Vectors LDR              PC,Reset_Addr
  277 00000004 E59FF018        LDR              PC,Undef_Addr
  278 00000008 E59FF018        LDR              PC,SWI_Addr
  279 0000000C E59FF018        LDR              PC,PAbt_Addr
  280 00000010 E59FF018        LDR              PC,DAbt_Addr
  281 00000014 E1A00000        NOP                          ; Reserved Vector
  282 00000018         ;               LDR     PC,IRQ_Addr
  283 00000018 E51FFF20        LDR              PC,[PC,#-0xF20] ; Vector From A
                                                            IC_IVR
  284 0000001C         ;               LDR     PC,FIQ_Addr
  285 0000001C E51FFF20        LDR              PC,[PC,#-0xF20] ; Vector From A
                                                            IC_FVR
  286 00000020         
  287 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  288 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  289 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  290 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  291 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  292 00000034 00000000        DCD              0           ; Reserved Address
  293 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  294 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  295 00000040         
  296 00000040                 IMPORT           SWI_Handler
  297 00000040         
  298 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  299 00000044         ;SWI_Handler    B       SWI_Handler            ; Part of
                        RTL (SWI_Table.s included globally or via project)
  300 00000044 EAFFFFFE 
                       PAbt_Handler



ARM Macro Assembler    Page 10 


                               B                PAbt_Handler
  301 00000048 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  302 0000004C EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  303 00000050 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  304 00000054         
  305 00000054         
  306 00000054         ; Reset Handler
  307 00000054         
  308 00000054                 EXPORT           Reset_Handler
  309 00000054         Reset_Handler
  310 00000054         
  311 00000054         
  312 00000054         ; Setup RSTC
  313 00000054                 IF               RSTC_SETUP != 0
  314 00000054 E59F00D4        LDR              R0, =RSTC_BASE
  315 00000058 E59F10D4        LDR              R1, =RSTC_MR_Val
  316 0000005C E5801008        STR              R1, [R0, #RSTC_MR]
  317 00000060                 ENDIF
  318 00000060         
  319 00000060         
  320 00000060         ; Setup EFC0
  321 00000060                 IF               EFC0_SETUP != 0
  322 00000060 E59F00D0        LDR              R0, =EFC_BASE
  323 00000064 E59F10D0        LDR              R1, =EFC0_FMR_Val
  324 00000068 E5801060        STR              R1, [R0, #EFC0_FMR]
  325 0000006C                 ENDIF
  326 0000006C         
  327 0000006C         ; Setup EFC1
  328 0000006C                 IF               EFC1_SETUP != 0
  329 0000006C E59F00C4        LDR              R0, =EFC_BASE
  330 00000070 E59F10C4        LDR              R1, =EFC1_FMR_Val
  331 00000074 E5801070        STR              R1, [R0, #EFC1_FMR]
  332 00000078                 ENDIF
  333 00000078         
  334 00000078         
  335 00000078         ; Setup WDT (system exclusive mode dependent!)
  336 00000078                 IF               WDT_SETUP != 0
  337 00000078                 IF               (SYS_EXCLUSIVE == 0 || WDT_EXCL
USIVE == 0) || (SYS_EXCLUSIVE != 0 && WDT_EXCLUSIVE != 0)
  338 00000078 E59F00C0        LDR              R0, =WDT_BASE
  339 0000007C E3A01902        LDR              R1, =WDT_MR_Val
  340 00000080 E5801004        STR              R1, [R0, #WDT_MR]
  341 00000084                 ENDIF                        ; WDT_EXCLUSIVE...
  342 00000084                 ENDIF                        ; WDT_SETUP
  343 00000084         
  344 00000084         
  345 00000084         ; Setup PMC (system exclusive mode only!)
  346 00000084                 IF               PMC_SETUP != 0
  347 00000084                 IF               SYS_EXCLUSIVE != 0
  348 00000084 E59F00B8        LDR              R0, =PMC_BASE
  349 00000088         
  350 00000088         ;  Setup Main Oscillator (system exclusive mode only!)
  351 00000088 E59F10B8        LDR              R1, =PMC_MOR_Val



ARM Macro Assembler    Page 11 


  352 0000008C E5801020        STR              R1, [R0, #PMC_MOR]
  353 00000090         
  354 00000090         ;  Wait until Main Oscillator is stablilized (system exc
                       lusive mode only!)
  355 00000090                 IF               (PMC_MOR_Val:AND:PMC_MOSCEN) !=
 0
  356 00000090 E5902068 
                       MOSCS_Loop
                               LDR              R2, [R0, #PMC_SR]
  357 00000094 E2122001        ANDS             R2, R2, #PMC_MOSCS
  358 00000098 0AFFFFFC        BEQ              MOSCS_Loop
  359 0000009C                 ENDIF
  360 0000009C         
  361 0000009C         ;  Setup the PLL (system exclusive mode only!)
  362 0000009C                 IF               (PMC_PLLR_Val:AND:PMC_MUL) != 0
  363 0000009C E59F10A8        LDR              R1, =PMC_PLLR_Val
  364 000000A0 E580102C        STR              R1, [R0, #PMC_PLLR]
  365 000000A4         
  366 000000A4         ;  Wait until PLL is stabilized (system exclusive mode o
                       nly!)
  367 000000A4 E5902068 
                       PLL_Loop
                               LDR              R2, [R0, #PMC_SR]
  368 000000A8 E2122004        ANDS             R2, R2, #PMC_LOCK
  369 000000AC 0AFFFFFC        BEQ              PLL_Loop
  370 000000B0                 ENDIF
  371 000000B0         
  372 000000B0         ;  Select Clock (system exclusive mode only!)
  373 000000B0                 IF               (PMC_MCKR_Val:AND:PMC_CSS) == 1
 
                                                            ; Main Clock Select
                                                            ed
  397                          ENDIF                        ; Select Clock
  398 000000DC                 ENDIF                        ; SYS_EXCLUSIVE
  399 000000DC                 ENDIF                        ; PMC_SETUP
  400 000000DC         
  401 000000DC         
  402 000000DC         ; Copy Exception Vectors to Internal RAM (requires 64 by
                       tes reserved at start of RAM, refer to target options RA
                       M start and size!!!)
  403 000000DC         
  404 000000DC                 IF               :DEF:RAM_INTVEC
  456                          ENDIF                        ; RAM_INTVEC
  457 000000DC         
  458 000000DC         
  459 000000DC         ; Remap on-chip RAM to address 0 (mirror RAM address spa
                       ce)
  460 000000DC         
  461 000000DC FFFFFF00 
                       MC_BASE EQU              0xFFFFFF00  ; MC Base Address
  462 000000DC 00000000 
                       MC_RCR  EQU              0x00        ; MC_RCR Offset
  463 000000DC         
  464 000000DC                 IF               :DEF:REMAP
  468                          ENDIF
  469 000000DC         
  470 000000DC         
  471 000000DC         ; Setup Stack for each mode
  472 000000DC         



ARM Macro Assembler    Page 12 


  473 000000DC E59F006C        LDR              R0, =Stack_Top
  474 000000E0         
  475 000000E0         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  476 000000E0 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  477 000000E4 E1A0D000        MOV              SP, R0
  478 000000E8 E2400080        SUB              R0, R0, #UND_Stack_Size
  479 000000EC         
  480 000000EC         ;  Enter Abort Mode and set its Stack Pointer
  481 000000EC E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  482 000000F0 E1A0D000        MOV              SP, R0
  483 000000F4 E2400080        SUB              R0, R0, #ABT_Stack_Size
  484 000000F8         
  485 000000F8         ;  Enter FIQ Mode and set its Stack Pointer
  486 000000F8 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  487 000000FC E1A0D000        MOV              SP, R0
  488 00000100 E2400080        SUB              R0, R0, #FIQ_Stack_Size
  489 00000104         
  490 00000104         ;  Enter IRQ Mode and set its Stack Pointer
  491 00000104 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  492 00000108 E1A0D000        MOV              SP, R0
  493 0000010C E2400C02        SUB              R0, R0, #IRQ_Stack_Size
  494 00000110         
  495 00000110         ;  Enter Supervisor Mode and set its Stack Pointer
  496 00000110 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  497 00000114 E1A0D000        MOV              SP, R0
  498 00000118 E2400C01        SUB              R0, R0, #SVC_Stack_Size
  499 0000011C         
  500 0000011C         ;  Enter User Mode and set its Stack Pointer
  501 0000011C E321F010        MSR              CPSR_c, #Mode_USR
  502 00000120                 IF               :DEF:__MICROLIB
  507 00000120         
  508 00000120 E1A0D000        MOV              SP, R0
  509 00000124 E24DAC02        SUB              SL, SP, #USR_Stack_Size
  510 00000128         
  511 00000128                 ENDIF
  512 00000128         
  513 00000128         
  514 00000128         ; Enter the C code
  515 00000128         
  516 00000128                 IMPORT           __main
  517 00000128 E59F0024        LDR              R0, =__main
  518 0000012C E12FFF10        BX               R0
  519 00000130         
  520 00000130         
  521 00000130                 IF               :DEF:__MICROLIB
  527 00000130         ; User Initial Stack & Heap
  528 00000130 FFFFFD00 
              A5000401 
              FFFFFF00 
              00320100 
              FFFFFD40 
              FFFFFC00 
              00000601 



ARM Macro Assembler    Page 13 


              00191C05 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  529 00000000         
  530 00000000                 IMPORT           __use_two_region_memory
  531 00000000                 EXPORT           __user_initial_stackheap
  532 00000000         __user_initial_stackheap
  533 00000000         
  534 00000000 E59F000C        LDR              R0, =  Heap_Mem
  535 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  536 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  537 0000000C E59F300C        LDR              R3, = Stack_Mem
  538 00000010 E12FFF1E        BX               LR
  539 00000014                 ENDIF
  540 00000014         
  541 00000014         
  542 00000014                 END
              00000000 
              00000200 
              000001F4 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\OBJ\SAM7.d -o.\OBJ\SAM
7.o -I.\CFG -I..\SHARED\CFG -I..\SHARED\SRC -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC
\Atmel\SAM7X --predefine="__RTX SETA 1" --list=.\OBJ\SAM7.lst CFG\SAM7.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 117 in file CFG\SAM7.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 119 in file CFG\SAM7.s
   Uses
      At line 535 in file CFG\SAM7.s
      At line 537 in file CFG\SAM7.s

Stack_Top 00000680

Symbol: Stack_Top
   Definitions
      At line 122 in file CFG\SAM7.s
   Uses
      At line 473 in file CFG\SAM7.s
Comment: Stack_Top used once
__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 120 in file CFG\SAM7.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 131 in file CFG\SAM7.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 133 in file CFG\SAM7.s
   Uses
      At line 534 in file CFG\SAM7.s
      At line 536 in file CFG\SAM7.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 132 in file CFG\SAM7.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 000001F4

Symbol: __heap_limit
   Definitions
      At line 134 in file CFG\SAM7.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 291 in file CFG\SAM7.s
   Uses
      At line 280 in file CFG\SAM7.s
Comment: DAbt_Addr used once
DAbt_Handler 00000048

Symbol: DAbt_Handler
   Definitions
      At line 301 in file CFG\SAM7.s
   Uses
      At line 291 in file CFG\SAM7.s
      At line 301 in file CFG\SAM7.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 294 in file CFG\SAM7.s
   Uses
      None
Comment: FIQ_Addr unused
FIQ_Handler 00000050

Symbol: FIQ_Handler
   Definitions
      At line 303 in file CFG\SAM7.s
   Uses
      At line 294 in file CFG\SAM7.s
      At line 303 in file CFG\SAM7.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 293 in file CFG\SAM7.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 0000004C

Symbol: IRQ_Handler
   Definitions
      At line 302 in file CFG\SAM7.s
   Uses
      At line 293 in file CFG\SAM7.s
      At line 302 in file CFG\SAM7.s

MOSCS_Loop 00000090

Symbol: MOSCS_Loop
   Definitions
      At line 356 in file CFG\SAM7.s
   Uses
      At line 358 in file CFG\SAM7.s
Comment: MOSCS_Loop used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 290 in file CFG\SAM7.s
   Uses
      At line 279 in file CFG\SAM7.s
Comment: PAbt_Addr used once
PAbt_Handler 00000044

Symbol: PAbt_Handler
   Definitions
      At line 300 in file CFG\SAM7.s
   Uses
      At line 290 in file CFG\SAM7.s
      At line 300 in file CFG\SAM7.s

PLL_Loop 000000A4

Symbol: PLL_Loop
   Definitions
      At line 367 in file CFG\SAM7.s
   Uses
      At line 369 in file CFG\SAM7.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 267 in file CFG\SAM7.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 287 in file CFG\SAM7.s
   Uses
      At line 276 in file CFG\SAM7.s
Comment: Reset_Addr used once
Reset_Handler 00000054

Symbol: Reset_Handler
   Definitions
      At line 309 in file CFG\SAM7.s
   Uses
      At line 287 in file CFG\SAM7.s
      At line 308 in file CFG\SAM7.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 289 in file CFG\SAM7.s
   Uses
      At line 278 in file CFG\SAM7.s
Comment: SWI_Addr used once
Undef_Addr 00000024



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: Undef_Addr
   Definitions
      At line 288 in file CFG\SAM7.s
   Uses
      At line 277 in file CFG\SAM7.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 298 in file CFG\SAM7.s
   Uses
      At line 288 in file CFG\SAM7.s
      At line 298 in file CFG\SAM7.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 276 in file CFG\SAM7.s
   Uses
      None
Comment: Vectors unused
WAIT_Rdy1 000000BC

Symbol: WAIT_Rdy1
   Definitions
      At line 389 in file CFG\SAM7.s
   Uses
      At line 391 in file CFG\SAM7.s
Comment: WAIT_Rdy1 used once
WAIT_Rdy2 000000D0

Symbol: WAIT_Rdy2
   Definitions
      At line 394 in file CFG\SAM7.s
   Uses
      At line 396 in file CFG\SAM7.s
Comment: WAIT_Rdy2 used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 528 in file CFG\SAM7.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 532 in file CFG\SAM7.s
   Uses
      At line 531 in file CFG\SAM7.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000080

Symbol: ABT_Stack_Size
   Definitions
      At line 109 in file CFG\SAM7.s
   Uses
      At line 115 in file CFG\SAM7.s
      At line 483 in file CFG\SAM7.s

EFC0_FMR 00000060

Symbol: EFC0_FMR
   Definitions
      At line 155 in file CFG\SAM7.s
   Uses
      At line 324 in file CFG\SAM7.s
Comment: EFC0_FMR used once
EFC0_FMR_Val 00320100

Symbol: EFC0_FMR_Val
   Definitions
      At line 168 in file CFG\SAM7.s
   Uses
      At line 323 in file CFG\SAM7.s
Comment: EFC0_FMR_Val used once
EFC0_SETUP 00000001

Symbol: EFC0_SETUP
   Definitions
      At line 167 in file CFG\SAM7.s
   Uses
      At line 321 in file CFG\SAM7.s
Comment: EFC0_SETUP used once
EFC1_FMR 00000070

Symbol: EFC1_FMR
   Definitions
      At line 156 in file CFG\SAM7.s
   Uses
      At line 331 in file CFG\SAM7.s
Comment: EFC1_FMR used once
EFC1_FMR_Val 00320100

Symbol: EFC1_FMR_Val
   Definitions
      At line 180 in file CFG\SAM7.s
   Uses
      At line 330 in file CFG\SAM7.s
Comment: EFC1_FMR_Val used once
EFC1_SETUP 00000001

Symbol: EFC1_SETUP
   Definitions
      At line 179 in file CFG\SAM7.s
   Uses
      At line 328 in file CFG\SAM7.s
Comment: EFC1_SETUP used once
EFC_BASE FFFFFF00




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: EFC_BASE
   Definitions
      At line 154 in file CFG\SAM7.s
   Uses
      At line 322 in file CFG\SAM7.s
      At line 329 in file CFG\SAM7.s

ERR_SIGNALING 00000001

Symbol: ERR_SIGNALING
   Definitions
      At line 69 in file CFG\SAM7.s
   Uses
      None
Comment: ERR_SIGNALING unused
FIQ_Stack_Size 00000080

Symbol: FIQ_Stack_Size
   Definitions
      At line 110 in file CFG\SAM7.s
   Uses
      At line 115 in file CFG\SAM7.s
      At line 488 in file CFG\SAM7.s

FLASH_BASE 00100000

Symbol: FLASH_BASE
   Definitions
      At line 83 in file CFG\SAM7.s
   Uses
      None
Comment: FLASH_BASE unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 46 in file CFG\SAM7.s
   Uses
      At line 476 in file CFG\SAM7.s
      At line 481 in file CFG\SAM7.s
      At line 486 in file CFG\SAM7.s
      At line 491 in file CFG\SAM7.s
      At line 496 in file CFG\SAM7.s

Heap_Size 000001F4

Symbol: Heap_Size
   Definitions
      At line 129 in file CFG\SAM7.s
   Uses
      At line 133 in file CFG\SAM7.s
      At line 536 in file CFG\SAM7.s

IRQ_Stack_Size 00000200

Symbol: IRQ_Stack_Size
   Definitions
      At line 111 in file CFG\SAM7.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 115 in file CFG\SAM7.s
      At line 493 in file CFG\SAM7.s

ISR_Stack_Size 00000480

Symbol: ISR_Stack_Size
   Definitions
      At line 115 in file CFG\SAM7.s
   Uses
      At line 120 in file CFG\SAM7.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 45 in file CFG\SAM7.s
   Uses
      At line 476 in file CFG\SAM7.s
      At line 481 in file CFG\SAM7.s
      At line 486 in file CFG\SAM7.s
      At line 491 in file CFG\SAM7.s
      At line 496 in file CFG\SAM7.s

MC_BASE FFFFFF00

Symbol: MC_BASE
   Definitions
      At line 461 in file CFG\SAM7.s
   Uses
      None
Comment: MC_BASE unused
MC_RCR 00000000

Symbol: MC_RCR
   Definitions
      At line 462 in file CFG\SAM7.s
   Uses
      None
Comment: MC_RCR unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 41 in file CFG\SAM7.s
   Uses
      At line 481 in file CFG\SAM7.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 38 in file CFG\SAM7.s
   Uses
      At line 486 in file CFG\SAM7.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 39 in file CFG\SAM7.s
   Uses
      At line 491 in file CFG\SAM7.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 40 in file CFG\SAM7.s
   Uses
      At line 496 in file CFG\SAM7.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 43 in file CFG\SAM7.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 42 in file CFG\SAM7.s
   Uses
      At line 476 in file CFG\SAM7.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 37 in file CFG\SAM7.s
   Uses
      At line 501 in file CFG\SAM7.s
Comment: Mode_USR used once
PIO_BASE FFFFF400

Symbol: PIO_BASE
   Definitions
      At line 70 in file CFG\SAM7.s
   Uses
      None
Comment: PIO_BASE unused
PIO_MASK 00000004

Symbol: PIO_MASK
   Definitions
      At line 71 in file CFG\SAM7.s
   Uses
      None
Comment: PIO_MASK unused
PIO_XODR 00000034

Symbol: PIO_XODR
   Definitions
      At line 72 in file CFG\SAM7.s
   Uses
      None



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Comment: PIO_XODR unused
PMC_BASE FFFFFC00

Symbol: PMC_BASE
   Definitions
      At line 206 in file CFG\SAM7.s
   Uses
      At line 348 in file CFG\SAM7.s
Comment: PMC_BASE used once
PMC_CSS 00000003

Symbol: PMC_CSS
   Definitions
      At line 220 in file CFG\SAM7.s
   Uses
      At line 373 in file CFG\SAM7.s
      At line 385 in file CFG\SAM7.s

PMC_DIV 000000FF

Symbol: PMC_DIV
   Definitions
      At line 215 in file CFG\SAM7.s
   Uses
      None
Comment: PMC_DIV unused
PMC_LOCK 00000004

Symbol: PMC_LOCK
   Definitions
      At line 223 in file CFG\SAM7.s
   Uses
      At line 368 in file CFG\SAM7.s
Comment: PMC_LOCK used once
PMC_MCFR 00000024

Symbol: PMC_MCFR
   Definitions
      At line 208 in file CFG\SAM7.s
   Uses
      None
Comment: PMC_MCFR unused
PMC_MCKR 00000030

Symbol: PMC_MCKR
   Definitions
      At line 210 in file CFG\SAM7.s
   Uses
      At line 388 in file CFG\SAM7.s
      At line 393 in file CFG\SAM7.s

PMC_MCKRDY 00000008

Symbol: PMC_MCKRDY
   Definitions
      At line 224 in file CFG\SAM7.s
   Uses
      At line 390 in file CFG\SAM7.s
      At line 395 in file CFG\SAM7.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols


PMC_MCKR_Val 00000007

Symbol: PMC_MCKR_Val
   Definitions
      At line 258 in file CFG\SAM7.s
   Uses
      At line 373 in file CFG\SAM7.s
      At line 385 in file CFG\SAM7.s
      At line 386 in file CFG\SAM7.s
      At line 392 in file CFG\SAM7.s

PMC_MOR 00000020

Symbol: PMC_MOR
   Definitions
      At line 207 in file CFG\SAM7.s
   Uses
      At line 352 in file CFG\SAM7.s
Comment: PMC_MOR used once
PMC_MOR_Val 00000601

Symbol: PMC_MOR_Val
   Definitions
      At line 256 in file CFG\SAM7.s
   Uses
      At line 351 in file CFG\SAM7.s
      At line 355 in file CFG\SAM7.s

PMC_MOSCEN 00000001

Symbol: PMC_MOSCEN
   Definitions
      At line 212 in file CFG\SAM7.s
   Uses
      At line 355 in file CFG\SAM7.s
Comment: PMC_MOSCEN used once
PMC_MOSCS 00000001

Symbol: PMC_MOSCS
   Definitions
      At line 222 in file CFG\SAM7.s
   Uses
      At line 357 in file CFG\SAM7.s
Comment: PMC_MOSCS used once
PMC_MUL 07FF0000

Symbol: PMC_MUL
   Definitions
      At line 218 in file CFG\SAM7.s
   Uses
      At line 362 in file CFG\SAM7.s
Comment: PMC_MUL used once
PMC_OSCBYPASS 00000002

Symbol: PMC_OSCBYPASS
   Definitions
      At line 213 in file CFG\SAM7.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PMC_OSCBYPASS unused
PMC_OSCOUNT 0000FF00

Symbol: PMC_OSCOUNT
   Definitions
      At line 214 in file CFG\SAM7.s
   Uses
      None
Comment: PMC_OSCOUNT unused
PMC_OUT 0000C000

Symbol: PMC_OUT
   Definitions
      At line 217 in file CFG\SAM7.s
   Uses
      None
Comment: PMC_OUT unused
PMC_PLLCOUNT 00003F00

Symbol: PMC_PLLCOUNT
   Definitions
      At line 216 in file CFG\SAM7.s
   Uses
      None
Comment: PMC_PLLCOUNT unused
PMC_PLLR 0000002C

Symbol: PMC_PLLR
   Definitions
      At line 209 in file CFG\SAM7.s
   Uses
      At line 364 in file CFG\SAM7.s
Comment: PMC_PLLR used once
PMC_PLLR_Val 00191C05

Symbol: PMC_PLLR_Val
   Definitions
      At line 257 in file CFG\SAM7.s
   Uses
      At line 362 in file CFG\SAM7.s
      At line 363 in file CFG\SAM7.s

PMC_PRES 0000001C

Symbol: PMC_PRES
   Definitions
      At line 221 in file CFG\SAM7.s
   Uses
      At line 387 in file CFG\SAM7.s
Comment: PMC_PRES used once
PMC_SETUP 00000001

Symbol: PMC_SETUP
   Definitions
      At line 255 in file CFG\SAM7.s
   Uses
      At line 346 in file CFG\SAM7.s
Comment: PMC_SETUP used once



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

PMC_SR 00000068

Symbol: PMC_SR
   Definitions
      At line 211 in file CFG\SAM7.s
   Uses
      At line 356 in file CFG\SAM7.s
      At line 367 in file CFG\SAM7.s
      At line 389 in file CFG\SAM7.s
      At line 394 in file CFG\SAM7.s

PMC_USBDIV 30000000

Symbol: PMC_USBDIV
   Definitions
      At line 219 in file CFG\SAM7.s
   Uses
      None
Comment: PMC_USBDIV unused
RAM_BASE 00200000

Symbol: RAM_BASE
   Definitions
      At line 93 in file CFG\SAM7.s
   Uses
      None
Comment: RAM_BASE unused
RSTC_BASE FFFFFD00

Symbol: RSTC_BASE
   Definitions
      At line 138 in file CFG\SAM7.s
   Uses
      At line 314 in file CFG\SAM7.s
Comment: RSTC_BASE used once
RSTC_MR 00000008

Symbol: RSTC_MR
   Definitions
      At line 139 in file CFG\SAM7.s
   Uses
      At line 316 in file CFG\SAM7.s
Comment: RSTC_MR used once
RSTC_MR_Val A5000401

Symbol: RSTC_MR_Val
   Definitions
      At line 150 in file CFG\SAM7.s
   Uses
      At line 315 in file CFG\SAM7.s
Comment: RSTC_MR_Val used once
RSTC_SETUP 00000001

Symbol: RSTC_SETUP
   Definitions
      At line 149 in file CFG\SAM7.s
   Uses
      At line 313 in file CFG\SAM7.s
Comment: RSTC_SETUP used once



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

SVC_Stack_Size 00000100

Symbol: SVC_Stack_Size
   Definitions
      At line 108 in file CFG\SAM7.s
   Uses
      At line 115 in file CFG\SAM7.s
      At line 498 in file CFG\SAM7.s

SYS_EXCLUSIVE 00000001

Symbol: SYS_EXCLUSIVE
   Definitions
      At line 55 in file CFG\SAM7.s
   Uses
      At line 337 in file CFG\SAM7.s
      At line 337 in file CFG\SAM7.s
      At line 347 in file CFG\SAM7.s

UND_Stack_Size 00000080

Symbol: UND_Stack_Size
   Definitions
      At line 107 in file CFG\SAM7.s
   Uses
      At line 115 in file CFG\SAM7.s
      At line 478 in file CFG\SAM7.s

USR_Stack_Size 00000200

Symbol: USR_Stack_Size
   Definitions
      At line 112 in file CFG\SAM7.s
   Uses
      At line 119 in file CFG\SAM7.s
      At line 509 in file CFG\SAM7.s
      At line 535 in file CFG\SAM7.s

WDT_BASE FFFFFD40

Symbol: WDT_BASE
   Definitions
      At line 184 in file CFG\SAM7.s
   Uses
      At line 338 in file CFG\SAM7.s
Comment: WDT_BASE used once
WDT_EXCLUSIVE 00000001

Symbol: WDT_EXCLUSIVE
   Definitions
      At line 56 in file CFG\SAM7.s
   Uses
      At line 337 in file CFG\SAM7.s
      At line 337 in file CFG\SAM7.s

WDT_MR 00000004

Symbol: WDT_MR
   Definitions



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

      At line 185 in file CFG\SAM7.s
   Uses
      At line 340 in file CFG\SAM7.s
Comment: WDT_MR used once
WDT_MR_Val 00008000

Symbol: WDT_MR_Val
   Definitions
      At line 202 in file CFG\SAM7.s
   Uses
      At line 339 in file CFG\SAM7.s
Comment: WDT_MR_Val used once
WDT_SETUP 00000001

Symbol: WDT_SETUP
   Definitions
      At line 201 in file CFG\SAM7.s
   Uses
      At line 336 in file CFG\SAM7.s
Comment: WDT_SETUP used once
65 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 296 in file CFG\SAM7.s
   Uses
      At line 289 in file CFG\SAM7.s
Comment: SWI_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 516 in file CFG\SAM7.s
   Uses
      At line 517 in file CFG\SAM7.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 530 in file CFG\SAM7.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
437 symbols in table
